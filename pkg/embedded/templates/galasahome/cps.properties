# 
# File: cps.properties
#
# Purpose:
#   To provide properties to the Galasa runtime when not using a 
#   Galasa ecosystem. ie: When running locally with a JVM.
#
#   Typically, users set these values to control local JVM runs, and the
#   values here are ignored when tests execute within a Galasa Ecosysyem.
#

#
# Note: Comments in this file are lines which start with a '#' character.
#

# Typically, properties hold configuration for Galasa managers, to be
# read when the manager starts up.
#
# For example:
# mymanager.myproperty="A value my manager code needs to configure itself"

#
# Naming conventions
#
# The convention for a property structure here is:
#   lower-case letters are fixed, and always the same.
#   UPPER-CASE letters represent a variable piece of information.
#     Such a value will normally appear as a part of many properties to
#     imply that the properties are related or grouped in some manner.
#

# An example of properties required to identify and configue a z/OS resource
# In this case, our z/OS system is on a cluster, which has two images.
# Here we define a user-tag called CLUSTERA.
# This defines a user-tag of IMAGEA and IMAGEB.
# The names are chosen to be meaningful, and to give us a way of linking 
# related properties using parts of the name.

# zos.cluster.CLUSTERA.images=IMAGEA,IMAGEB

## Here are some physical values which can be looked up for the IMAGEA system:
# zos.image.IMAGEA.default.hostname=dev.galasa.system1
# zos.image.IMAGEA.ipv4.hostname=dev.galasa.system1
# zos.image.IMAGEA.telnet.port=992
# zos.image.IMAGEA.telnet.tls=true
# zos.image.IMAGEA.credentials=MY_KEY_INTO_GALASA_CREDENTIALS_STORE
# zos.image.IMAGEA.max.slots=4

## Here are some physical values which can be looked up for the IMAGEA system
# zos.image.IMAGEB.default.hostname=dev.galasa.system2
# zos.image.IMAGEB.ipv4.hostname=dev.galasa.system2
# zos.image.IMAGEB.telnet.port=992
# zos.image.IMAGEB.telnet.tls=true
# zos.image.IMAGEB.credentials=MY_KEY_INTO_GALASA_CREDENTIALS_STORE
# zos.image.IMAGEB.max.slots=4

## For our systems, we might use zosmf to communicate to the z/OS systems...
# zosmf.server.CLUSTERA.images=IMAGE1
# zosmf.server.MVLA.hostname=dev.galasa.system1
# zosmf.server.MVLA.port=32070

#-------------------------------------------------------------------------
# framework.continue.on.test.failure
#
# Globally controls whether a test class fails at the first failure, or 
# attempts to continue to run methods on that class even though a method has
# previously failed.
#
# Use the @ContinueOnTestFailure annotation on a class if you want to control it
# at a specific class granularity rather than an overall global setting.
#
# Default value is false.
#
# Example:
# framework.continue.on.test.failure=true

#-------------------------------------------------------------------------
# zos3270.terminal.output
#
# Controls which output format(s) any 3270 traffic uses when creating artifact files
# in the Result Archive Store (RAS).
#
# Supported values are 'json' or 'png' or both.
# 
# Default for a locally-launched JVM test is both.
#
# Example:
# zos3270.terminal.output=json,png